#!/bin/bash
# Tom <linreg@gmx.net>

usage() {
    echo "Usage: $0 -c CLIENT_NAME [-t DAYS]"
    echo "Issues a client certificate for CLIENT_NAME"
    echo
    echo "Options:"
    echo "    -c CLIENT_NAME  Client name (commonName) for the new cert"
    echo "    -t How many days to live (optional)"
    echo
    exit 2
}

# Var init
CLIENT_NAME=
DAYS=

BIN_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source ${BIN_DIR}/functions
source ${BIN_DIR}/defaults.conf

DAYS=$CA_DEFAULT_DAYS

while getopts c:t: FLAG; do
    case $FLAG in
        c) CLIENT_NAME=${OPTARG} 
           ;;
        t) DAYS="${OPTARG}"
           ;;        
        *) usage ;;
    esac
done

if [ "${CLIENT_NAME}" == "" ]; then
    usage
fi

SAFE_NAME=`echo $CLIENT_NAME | sed 's/\*/star/g'`
SAFE_NAME=`echo $SAFE_NAME | sed 's/[^A-Za-z0-9-]/-/g'`

echo
echo "Creating new client certificate for '${CLIENT_NAME}'"
echo "DAYS=$DAYS"
echo

pushd ${BIN_DIR}/.. > /dev/null

if [ -f conf/${SAFE_NAME}.client.conf ]; then
    echo "Configuration already exists for '${CLIENT_NAME}', exiting."
    exit 1
fi

echo -n "Enter passphase for signing CA key: "
read -s PASS
echo
export CA_PASS=${PASS}

# Generate the client cert openssl config
export SAN=""
export CA_USERNAME=${CLIENT_NAME}
template "${BIN_DIR}/templates/client.tpl" "conf/${SAFE_NAME}.client.conf"

# Create the client key and csr
openssl req -new -nodes \
            -config conf/${SAFE_NAME}.client.conf \
            -keyout private/${SAFE_NAME}.client.key \
            -out csr/${SAFE_NAME}.client.csr
chmod 0400 private/${SAFE_NAME}.client.key

# Create the client certificate
openssl ca -batch -notext \
           -in csr/${SAFE_NAME}.client.csr \
           -out certs/${SAFE_NAME}.client.crt \
           -extensions client_ext \
           -passin env:CA_PASS \
           -config conf/ca.conf \
           -days $DAYS

popd > /dev/null

echo
echo "Client certificate created."
echo

